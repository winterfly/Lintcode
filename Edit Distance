public class Solution {
    /**
     * @param word1 & word2: Two string.
     * @return: The minimum number of steps.
     */
    public int minDistance(String word1, String word2) {
        if (word1.length() == 0 || word2.length() == 0) {
            return Math.max(word1.length(), word2.length());
        }
        
        int m = word1.length();
        int n = word2.length();
        int[][] dist = new int[m+1][n+1];
        
        dist[0][0] = 0;
        for (int i = 1; i <= m; i++) {
            dist[i][0] = i;
        }
        for (int j = 1; j <= n; j++) {
            dist[0][j] = j;
        }
        
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                dist[i][j] = Math.min(dist[i-1][j]+1, dist[i][j-1]+1);
                if (word1.charAt(i-1) == word2.charAt(j-1)) {
                    dist[i][j] = Math.min(dist[i][j], dist[i-1][j-1]);
                } else {
                    dist[i][j] = Math.min(dist[i][j], dist[i-1][j-1]+1);
                }
            }
        }
        return dist[m][n];
    }
}
